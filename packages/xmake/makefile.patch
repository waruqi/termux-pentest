--- xmake/makefile	2020-02-27 20:16:18.843328637 +0600
+++ xmake-mod/makefile	2020-02-27 19:32:39.155330511 +0600
@@ -32,32 +32,8 @@
 PLAT 		:=$(if $(PLAT),$(PLAT),linux)
 
 # architecture
-ifeq ($(ARCH),)
-ifneq ($(MSYSTEM_CARCH),)
-MSYSARCH 	:= $(if $(findstring mingw32,$(shell which gcc)),i386,$(MSYSTEM_CARCH))
-else
-MSYSARCH 	:= x$(shell getconf LONG_BIT)
-endif
-ARCH 		:=$(if $(findstring windows,$(PLAT)),x86,$(ARCH))
-ARCH 		:=$(if $(findstring msys,$(PLAT)),$(MSYSARCH),$(ARCH))
-ARCH 		:=$(if $(findstring cygwin,$(PLAT)),x$(shell getconf LONG_BIT),$(ARCH))
-ARCH 		:=$(if $(findstring macosx,$(PLAT)),x$(shell getconf LONG_BIT),$(ARCH))
-ARCH 		:=$(if $(findstring linux,$(PLAT)),x$(shell getconf LONG_BIT),$(ARCH))
-ARCH 		:=$(if $(findstring iphoneos,$(PLAT)),armv7,$(ARCH))
-ARCH 		:=$(if $(findstring android,$(PLAT)),armv7,$(ARCH))
-ARCH 		:=$(if $(findstring i686,$(ARCH)),i386,$(ARCH)) # from msys/mingw32
-ARCH 		:=$(if $(findstring x32,$(ARCH)),i386,$(ARCH))
-ARCH 		:=$(if $(findstring x64,$(ARCH)),x86_64,$(ARCH))
-
-# for arm linux? 
-ifeq ($(PLAT),linux)
-ARCHSTR 	:= $(shell uname -m)
-ARCH 		:= $(if $(findstring aarch64,$(ARCHSTR)),arm64,$(ARCH))
-ARCH 		:= $(if $(findstring arm64,$(ARCHSTR)),arm64,$(ARCH))
-ARCH 		:= $(if $(findstring armv7,$(ARCHSTR)),armv7,$(ARCH))
-ARCH 		:= $(if $(findstring arm,$(ARCHSTR)),arm,$(ARCH))
-endif
-endif
+
+ARCH 		:=${BUILD_ARCH}
 
 # conditionally map ARCH from amd64 to x86_64 if set from the outside
 #
@@ -65,7 +41,7 @@
 # variable. It might be set to amd64 which implies x86_64. Since e.g.
 # luajit expects either i386 or x86_64, the value amd64 is transformed
 # to match a directory for a platform dependent implementation.
-ARCH 		:=$(if $(findstring amd64,$(ARCH)),x86_64,$(ARCH))
+#ARCH 		:=$(if $(findstring amd64,$(ARCH)),x86_64,$(ARCH))
 
 # is windows?
 iswin =
@@ -94,6 +70,7 @@
 	@echo '    $ sudo make install [PREFIX=/usr/local] [DESTDIR=/xxx]'
 
 build:
+	@echo building for $(ARCH)
 	@echo compiling xmake-core ...
 	@if [ -f core/.config.mak ]; then rm core/.config.mak; fi
 	@$(MAKE) -C core --no-print-directory f DEBUG=$(debug)
